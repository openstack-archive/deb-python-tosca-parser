tosca_definitions_version: tosca_simple_yaml_1_0

description: >
  Service template with topology_template, act as a nested system inside another system.

imports:
  - definitions.yaml

topology_template:
  description: Template of a database including its hosting stack.

  inputs:
    mq_server_ip:
      type: string
      description: IP address of the message queuing server to receive messages from.
    receiver_port:
      type: string
      description: Port to be used for receiving messages.
    my_cpus:
      type: integer
      description: Number of CPUs for the server.
      constraints:
        - valid_values: [ 1, 2, 4, 8 ]

  node_templates:
    websrv:
      type: tosca.nodes.WebServer
      capabilities:
        data_endpoint:
          properties:
            port_name: { get_input: receiver_port }
      requirements:
        - host:
            node: server

    server:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            disk_size: 10 GB
            num_cpus: { get_input: my_cpus }
            mem_size: 4096 MB
        os:
          properties:
            architecture: x86_64
            type: Linux
            distribution: Ubuntu
            version: 14.04

  groups:
    webserver_group:
      type: mycompany.mytypes.groups.placement
      members: [ websrv, server ]
